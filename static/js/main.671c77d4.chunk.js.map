{"version":3,"sources":["defaultMarkdown.js","App.js","index.js"],"names":["defaultMarkdown","DOMPurify","createDOMPurify","window","marked","setOptions","breaks","renderer","Renderer","link","href","title","text","Editor","props","className","id","placeholder","value","this","input","tabIndex","autoFocus","onChange","onHandleChange","React","Component","Preview","createMarkup","__html","markdown","markup","sanitize","dangerouslySetInnerHTML","App","handleChange","e","setState","target","state","script","document","createElement","src","async","body","appendChild","ReactDOM","render","getElementById"],"mappings":"uUA+CeA,G,MA/CM,+qCCQfC,EAAYC,IAAgBC,QAGlCC,IAAOC,WAAW,CAChBC,QAAQ,IAIV,IAAMC,EAAW,IAAIH,IAAOI,SAC5BD,EAASE,KAAO,SAACC,EAAMC,EAAOC,GAC5B,MAAM,sDAAN,OAA6DF,EAA7D,aAAsEE,EAAtE,S,IAGIC,E,YACJ,WAAYC,GAAQ,qEACZA,I,sEAIN,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,SAAf,UACA,8BACEC,GAAG,SACHC,YAAY,gBACZC,MAAOC,KAAKL,MAAMM,MAClBC,SAAS,IACTC,WAAS,EACTC,SAAUJ,KAAKL,MAAMU,sB,GAfVC,IAAMC,WAsBrBC,E,YACJ,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KAGRc,aAAe,WACb,MAAO,CAAEC,OAAQzB,IAAO,EAAKU,MAAMM,MAAO,CAAEb,SAAUA,MALrC,E,sEASjB,IAAIuB,EAAWX,KAAKS,eAEhBG,EAAS,CAAEF,OADF5B,EAAU+B,SAASF,EAASD,SAEzC,OACE,yBAAKd,UAAU,qBACb,yBAAKA,UAAU,SAAf,WACA,yBAAKC,GAAG,UAAUiB,wBAAyBF,S,GAhB7BN,IAAMC,WAsDbQ,E,YA/Bb,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KAMRqB,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZjB,MAAOgB,EAAEE,OAAOpB,SAPlB,EAAKqB,MAAQ,CACXnB,MAAOpB,GAHQ,E,iFAcjB,IAAMwC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IACL,kEACFH,EAAOI,OAAQ,EACfH,SAASI,KAAKC,YAAYN,K,+BAI1B,OACE,yBAAKzB,UAAU,aACb,kBAAC,EAAD,CAAQS,eAAgBL,KAAKgB,aAAcf,MAAOD,KAAKoB,MAAMnB,QAC7D,kBAAC,EAAD,CAASA,MAAOD,KAAKoB,MAAMnB,a,GA1BjBK,IAAMC,WC5DxBqB,IAASC,OAAO,kBAAC,EAAD,MAASP,SAASQ,eAAe,W","file":"static/js/main.671c77d4.chunk.js","sourcesContent":["const defaultMarkdown =\n`# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\nexport default defaultMarkdown;","import React from 'react';\nimport marked from 'marked';\nimport createDOMPurify from 'dompurify';\n\nimport './App.css';\nimport defaultMarkdown from './defaultMarkdown';\n\n// For sanitization\nconst DOMPurify = createDOMPurify(window);\n\n// Interprets carriage returns and renders them as br (line break) elements.\nmarked.setOptions({\n  breaks: true\n});\n\n// Render links with target and rel\nconst renderer = new marked.Renderer();\nrenderer.link = (href, title, text) => {\n  return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${href}\">${text}</a>`;\n};\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className='editor-container'>\n        <div className='title'>Editor</div>\n        <textarea\n          id='editor'\n          placeholder='Mark it down!'\n          value={this.props.input}\n          tabIndex='0'\n          autoFocus\n          onChange={this.props.onHandleChange}\n        ></textarea>\n      </div>\n    );\n  }\n}\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  createMarkup = () => {\n    return { __html: marked(this.props.input, { renderer: renderer }) };\n  };\n\n  render() {\n    let markdown = this.createMarkup();\n    let __html = DOMPurify.sanitize(markdown.__html);\n    let markup = { __html };\n    return (\n      <div className='preview-container'>\n        <div className='title'>Preview</div>\n        <div id='preview' dangerouslySetInnerHTML={markup} />\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: defaultMarkdown\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src =\n      'https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js';\n    script.async = true;\n    document.body.appendChild(script);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <Editor onHandleChange={this.handleChange} input={this.state.input} />\n        <Preview input={this.state.input} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}